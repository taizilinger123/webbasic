1.什么是JS?
  1)JS是脚本语言
   --没有编译器的语言
   --JS和Java没有任何关系
  2)JS和Java的对比
   A.Java的特点
               面向对象：继承、封装、多态
   B.JS的特点
               基于对象：有对象，但不支持严格的继承、封装、多态
      --继承
          JS中没有继承的概念，但是它有原型的概念。每个对象都有一个prototype属性，用来指定该对象的原型对象，类似于继承。
      --封装
          JS中有不严格的封装，对象中封装的属性和方法是可以任意访问、修改的。
      --多态
          JS中的所有对象都是Object,即他们的根原型是Object。但是JS不像Java的多态那样严谨,JS中的对象可以赋值给任意类型的其他对象。
F12->console
var a;
undefined
a
undefined
a;
undefined
var b = null;
undefined
b;
null
var c = "hello";
undefined
c;
"hello"
var b = 123;
undefined
b;
123
字符串和数字和布尔值互相转换
var s = "abc";
undefined
var n = 3.14;
undefined
var b = true;
undefined
s+n;
"abc3.14"
s+b;
"abctrue"
n+b;
4.140000000000001
b+b;
2
强制转换
true.toString();
"true"
parseInt("3.14");
3
parseInt("6.89");
6
parseFloat("3.14");
3.14
parseFloat("3");
3
parseFloat("3.14a");
3.14
parseFloat("3.14abcdefg");
3.14
parseFloat("abc");
NaN
####################
typeof("abc");
"string"
typeof(123);
"number"
typeof(true);
"boolean"
######################
isNaN(is not a number)难道这不是数字吗？
isNaN("abc");
true
isNaN(123);
false
##################
var a = "123";
undefined
var b = 123;
undefined
var c = 123;
undefined
a==b
true
a===b
false
b===c
true
